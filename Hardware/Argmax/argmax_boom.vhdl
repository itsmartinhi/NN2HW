-- Generated by vxx2ghdl
--
-- Generated by VASY
--
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY argmax_boom IS
PORT(
  clk	: IN STD_LOGIC;
  c_argmax	: IN STD_LOGIC;
  in_argmax_val	: IN STD_LOGIC_VECTOR(20 DOWNTO 0);
  in_argmax_index	: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
  out_argmax_index	: OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
);
END argmax_boom;

ARCHITECTURE RTL OF argmax_boom IS
  SIGNAL rtlalc_3	: STD_LOGIC_VECTOR(3 DOWNTO 0);
  SIGNAL reg_argmax_val	: STD_LOGIC_VECTOR(20 DOWNTO 0);
  SIGNAL rtlcarry_2	: STD_LOGIC_VECTOR(20 DOWNTO 2);
  SIGNAL aux0	: STD_LOGIC;
  SIGNAL aux1	: STD_LOGIC;
  SIGNAL aux2	: STD_LOGIC;
  SIGNAL aux3	: STD_LOGIC;
  SIGNAL aux4	: STD_LOGIC;
  SIGNAL aux5	: STD_LOGIC;
  SIGNAL aux6	: STD_LOGIC;
  SIGNAL aux7	: STD_LOGIC;
BEGIN
  out_argmax_index(3) <= rtlalc_3(3);
  out_argmax_index(2) <= rtlalc_3(2);
  out_argmax_index(1) <= rtlalc_3(1);
  out_argmax_index(0) <= rtlalc_3(0);
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((NOT(aux4 AND NOT(in_argmax_index(3))) AND (aux6 OR aux5)) = '1')
    THEN rtlalc_3(3) <= '1';
    ELSIF ((aux4 AND NOT(in_argmax_index(3))) = '1')
    THEN rtlalc_3(3) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((NOT(aux4 AND NOT(in_argmax_index(2))) AND (aux6 OR aux5)) = '1')
    THEN rtlalc_3(2) <= '1';
    ELSIF ((aux4 AND NOT(in_argmax_index(2))) = '1')
    THEN rtlalc_3(2) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux4 = '1')
    THEN rtlalc_3(1 downto 0) <= in_argmax_index(1 downto 0);
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((in_argmax_val(20) AND c_argmax) = '1')
    THEN reg_argmax_val(20) <= '1';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux7 OR (NOT(c_argmax) OR in_argmax_val(19)))) = '1')
    THEN reg_argmax_val(19) <= '1';
    ELSIF ((NOT(aux7) AND (c_argmax AND NOT(in_argmax_val(19)))) = '1')
    THEN reg_argmax_val(19) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((NOT(aux4 AND NOT(in_argmax_val(18))) AND (aux6 OR aux5)) = '1')
    THEN reg_argmax_val(18) <= '1';
    ELSIF ((aux4 AND NOT(in_argmax_val(18))) = '1')
    THEN reg_argmax_val(18) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux7 OR (NOT(c_argmax) OR in_argmax_val(17)))) = '1')
    THEN reg_argmax_val(17) <= '1';
    ELSIF ((NOT(aux7) AND (c_argmax AND NOT(in_argmax_val(17)))) = '1')
    THEN reg_argmax_val(17) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux7 OR (NOT(c_argmax) OR in_argmax_val(16)))) = '1')
    THEN reg_argmax_val(16) <= '1';
    ELSIF ((NOT(aux7) AND (c_argmax AND NOT(in_argmax_val(16)))) = '1')
    THEN reg_argmax_val(16) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux4 = '1')
    THEN reg_argmax_val(15) <= in_argmax_val(15);
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux7 OR (NOT(c_argmax) OR in_argmax_val(14)))) = '1')
    THEN reg_argmax_val(14) <= '1';
    ELSIF ((NOT(aux7) AND (c_argmax AND NOT(in_argmax_val(14)))) = '1')
    THEN reg_argmax_val(14) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux4 = '1')
    THEN reg_argmax_val(13 downto 11) <= in_argmax_val(13 downto 11);
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux7 OR (NOT(c_argmax) OR in_argmax_val(10)))) = '1')
    THEN reg_argmax_val(10) <= '1';
    ELSIF ((NOT(aux7) AND (c_argmax AND NOT(in_argmax_val(10)))) = '1')
    THEN reg_argmax_val(10) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux4 = '1')
    THEN reg_argmax_val(9 downto 8) <= in_argmax_val(9 downto 8);
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux7 OR (NOT(c_argmax) OR in_argmax_val(7)))) = '1')
    THEN reg_argmax_val(7) <= '1';
    ELSIF ((NOT(aux7) AND (c_argmax AND NOT(in_argmax_val(7)))) = '1')
    THEN reg_argmax_val(7) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux4 = '1')
    THEN reg_argmax_val(6 downto 4) <= in_argmax_val(6 downto 4);
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux2 OR (NOT(aux3) OR in_argmax_val(3)))) = '1')
    THEN reg_argmax_val(3) <= '1';
    ELSIF ((NOT(aux2) AND (aux3 AND NOT(in_argmax_val(3)))) = '1')
    THEN reg_argmax_val(3) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux4 = '1')
    THEN reg_argmax_val(2 downto 1) <= in_argmax_val(2 downto 1);
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((aux4 AND (aux7 OR (NOT(c_argmax) OR in_argmax_val(0)))) = '1')
    THEN reg_argmax_val(0) <= '1';
    ELSIF ((NOT(aux7) AND (c_argmax AND NOT(in_argmax_val(0)))) = '1')
    THEN reg_argmax_val(0) <= '0';
    END IF;
    END IF;
  END PROCESS;
  rtlcarry_2(20) <= (((reg_argmax_val(19) AND NOT(in_argmax_val(19))) OR (reg_argmax_val(19) AND rtlcarry_2(19)
)) OR (NOT(in_argmax_val(19)) AND rtlcarry_2(19)));
  rtlcarry_2(19) <= (((reg_argmax_val(18) AND NOT(in_argmax_val(18))) OR (reg_argmax_val(18) AND rtlcarry_2(18)
)) OR (NOT(in_argmax_val(18)) AND rtlcarry_2(18)));
  rtlcarry_2(18) <= (((reg_argmax_val(17) AND NOT(in_argmax_val(17))) OR (reg_argmax_val(17) AND rtlcarry_2(17)
)) OR (NOT(in_argmax_val(17)) AND rtlcarry_2(17)));
  rtlcarry_2(17) <= (((reg_argmax_val(16) AND NOT(in_argmax_val(16))) OR (reg_argmax_val(16) AND rtlcarry_2(16)
)) OR (NOT(in_argmax_val(16)) AND rtlcarry_2(16)));
  rtlcarry_2(16) <= (((reg_argmax_val(15) AND NOT(in_argmax_val(15))) OR (reg_argmax_val(15) AND rtlcarry_2(15)
)) OR (NOT(in_argmax_val(15)) AND rtlcarry_2(15)));
  rtlcarry_2(15) <= (((reg_argmax_val(14) AND NOT(in_argmax_val(14))) OR (reg_argmax_val(14) AND rtlcarry_2(14)
)) OR (NOT(in_argmax_val(14)) AND rtlcarry_2(14)));
  rtlcarry_2(14) <= (((reg_argmax_val(13) AND NOT(in_argmax_val(13))) OR (reg_argmax_val(13) AND rtlcarry_2(13)
)) OR (NOT(in_argmax_val(13)) AND rtlcarry_2(13)));
  rtlcarry_2(13) <= (((reg_argmax_val(12) AND NOT(in_argmax_val(12))) OR (reg_argmax_val(12) AND rtlcarry_2(12)
)) OR (NOT(in_argmax_val(12)) AND rtlcarry_2(12)));
  rtlcarry_2(12) <= (((reg_argmax_val(11) AND NOT(in_argmax_val(11))) OR (reg_argmax_val(11) AND rtlcarry_2(11)
)) OR (NOT(in_argmax_val(11)) AND rtlcarry_2(11)));
  rtlcarry_2(11) <= (((reg_argmax_val(10) AND NOT(in_argmax_val(10))) OR (reg_argmax_val(10) AND rtlcarry_2(10)
)) OR (NOT(in_argmax_val(10)) AND rtlcarry_2(10)));
  rtlcarry_2(10) <= (((reg_argmax_val(9) AND NOT(in_argmax_val(9))) OR (reg_argmax_val(9) AND rtlcarry_2(9)
)) OR (NOT(in_argmax_val(9)) AND rtlcarry_2(9)));
  rtlcarry_2(9) <= (((reg_argmax_val(8) AND NOT(in_argmax_val(8))) OR (reg_argmax_val(8) AND rtlcarry_2(8)
)) OR (NOT(in_argmax_val(8)) AND rtlcarry_2(8)));
  rtlcarry_2(8) <= (((reg_argmax_val(7) AND NOT(in_argmax_val(7))) OR (reg_argmax_val(7) AND rtlcarry_2(7)
)) OR (NOT(in_argmax_val(7)) AND rtlcarry_2(7)));
  rtlcarry_2(7) <= (((reg_argmax_val(6) AND NOT(in_argmax_val(6))) OR (reg_argmax_val(6) AND rtlcarry_2(6)
)) OR (NOT(in_argmax_val(6)) AND rtlcarry_2(6)));
  rtlcarry_2(6) <= (((reg_argmax_val(5) AND NOT(in_argmax_val(5))) OR (reg_argmax_val(5) AND rtlcarry_2(5)
)) OR (NOT(in_argmax_val(5)) AND rtlcarry_2(5)));
  rtlcarry_2(5) <= (((reg_argmax_val(4) AND NOT(in_argmax_val(4))) OR (reg_argmax_val(4) AND rtlcarry_2(4)
)) OR (NOT(in_argmax_val(4)) AND rtlcarry_2(4)));
  rtlcarry_2(4) <= (((reg_argmax_val(3) AND NOT(in_argmax_val(3))) OR (reg_argmax_val(3) AND rtlcarry_2(3)
)) OR (NOT(in_argmax_val(3)) AND rtlcarry_2(3)));
  rtlcarry_2(3) <= (((reg_argmax_val(2) AND NOT(in_argmax_val(2))) OR (reg_argmax_val(2) AND rtlcarry_2(2)
)) OR (NOT(in_argmax_val(2)) AND rtlcarry_2(2)));
  rtlcarry_2(2) <= (((((reg_argmax_val(0) AND NOT(in_argmax_val(0))) OR reg_argmax_val(0)) OR NOT(in_argmax_val(0)
)) AND (reg_argmax_val(1) OR NOT(in_argmax_val(1)))) OR (reg_argmax_val(1) AND 
NOT(in_argmax_val(1))));
  aux0 <= NOT((rtlcarry_2(20) AND NOT(in_argmax_val(20))));
  aux1 <= NOT((rtlcarry_2(20) OR NOT(in_argmax_val(20))));
  aux2 <= (NOT(aux1) AND reg_argmax_val(20));
  aux3 <= (aux0 AND c_argmax);
  aux4 <= (NOT(aux2) AND aux3);
  aux5 <= (aux1 AND c_argmax);
  aux6 <= (aux3 AND NOT(reg_argmax_val(20)));
  aux7 <= (aux2 OR NOT(aux0));
END RTL;



-- Configuration for sxlib/VITAL library...
library sxlib;
use sxlib.vcomponents.all;

configuration CFG_argmax_boom of argmax_boom is
  for RTL
  end for;
end CFG_argmax_boom;
