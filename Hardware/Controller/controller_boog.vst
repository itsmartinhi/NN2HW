entity controller_boog is
   port (
      clk                  : in      bit;
      reset                : in      bit;
      in_ctrl_neuron_reset : in      bit;
      in_ctrl_input_reset  : in      bit;
      c_dec_neuron         : out     bit;
      c_dec_input          : out     bit;
      c_add_to_neuron      : out     bit;
      c_reset_register     : out     bit;
      c_argmax             : out     bit;
      halt                 : out     bit;
      vdd                  : in      bit;
      vss                  : in      bit
 );
end controller_boog;

architecture structural of controller_boog is
Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component noa22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal not_state            : bit_vector( 2 downto 0);
signal state                : bit_vector( 2 downto 0);
signal on12_x1_sig          : bit;
signal not_reset            : bit;
signal not_aux5             : bit;
signal not_aux4             : bit;
signal not_aux3             : bit;
signal not_aux0             : bit;
signal noa22_x1_sig         : bit;
signal no3_x1_sig           : bit;
signal no3_x1_2_sig         : bit;
signal na3_x1_sig           : bit;
signal na3_x1_2_sig         : bit;
signal na2_x1_sig           : bit;
signal na2_x1_2_sig         : bit;
signal aux1                 : bit;
signal a2_x2_sig            : bit;
signal a2_x2_2_sig          : bit;

begin

not_aux5_ins : o2_x2
   port map (
      i0  => state(0),
      i1  => not_state(1),
      q   => not_aux5,
      vdd => vdd,
      vss => vss
   );

not_aux4_ins : o2_x2
   port map (
      i0  => state(0),
      i1  => state(1),
      q   => not_aux4,
      vdd => vdd,
      vss => vss
   );

not_aux0_ins : o2_x2
   port map (
      i0  => state(2),
      i1  => not_state(0),
      q   => not_aux0,
      vdd => vdd,
      vss => vss
   );

not_state_0_ins : inv_x2
   port map (
      i   => state(0),
      nq  => not_state(0),
      vdd => vdd,
      vss => vss
   );

not_aux3_ins : o3_x2
   port map (
      i0  => in_ctrl_input_reset,
      i1  => state(1),
      i2  => state(2),
      q   => not_aux3,
      vdd => vdd,
      vss => vss
   );

not_state_1_ins : inv_x2
   port map (
      i   => state(1),
      nq  => not_state(1),
      vdd => vdd,
      vss => vss
   );

not_state_2_ins : inv_x2
   port map (
      i   => state(2),
      nq  => not_state(2),
      vdd => vdd,
      vss => vss
   );

not_reset_ins : inv_x2
   port map (
      i   => reset,
      nq  => not_reset,
      vdd => vdd,
      vss => vss
   );

aux1_ins : no2_x1
   port map (
      i0  => not_aux0,
      i1  => not_state(1),
      nq  => aux1,
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => not_reset,
      i1  => not_aux3,
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

noa22_x1_ins : noa22_x1
   port map (
      i0  => state(2),
      i1  => state(1),
      i2  => state(0),
      nq  => noa22_x1_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_2_ins : no3_x1
   port map (
      i0  => in_ctrl_neuron_reset,
      i1  => not_state(1),
      i2  => state(2),
      nq  => no3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_ins : no3_x1
   port map (
      i0  => no3_x1_2_sig,
      i1  => noa22_x1_sig,
      i2  => na2_x1_sig,
      nq  => no3_x1_sig,
      vdd => vdd,
      vss => vss
   );

state_2_ins : sff1_x4
   port map (
      ck  => clk,
      i   => no3_x1_sig,
      q   => state(2),
      vdd => vdd,
      vss => vss
   );

on12_x1_ins : on12_x1
   port map (
      i0  => aux1,
      i1  => in_ctrl_neuron_reset,
      q   => on12_x1_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => not_aux4,
      i1  => not_aux3,
      i2  => on12_x1_sig,
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_ins : a2_x2
   port map (
      i0  => na3_x1_sig,
      i1  => not_reset,
      q   => a2_x2_sig,
      vdd => vdd,
      vss => vss
   );

state_1_ins : sff1_x4
   port map (
      ck  => clk,
      i   => a2_x2_sig,
      q   => state(1),
      vdd => vdd,
      vss => vss
   );

na2_x1_2_ins : na2_x1
   port map (
      i0  => in_ctrl_neuron_reset,
      i1  => state(1),
      nq  => na2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_2_ins : na3_x1
   port map (
      i0  => not_aux5,
      i1  => not_state(2),
      i2  => na2_x1_2_sig,
      nq  => na3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_2_ins : a2_x2
   port map (
      i0  => na3_x1_2_sig,
      i1  => not_reset,
      q   => a2_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

state_0_ins : sff1_x4
   port map (
      ck  => clk,
      i   => a2_x2_2_sig,
      q   => state(0),
      vdd => vdd,
      vss => vss
   );

halt_ins : no3_x1
   port map (
      i0  => not_state(2),
      i1  => state(1),
      i2  => not_state(0),
      nq  => halt,
      vdd => vdd,
      vss => vss
   );

c_argmax_ins : no2_x1
   port map (
      i0  => not_aux4,
      i1  => not_state(2),
      nq  => c_argmax,
      vdd => vdd,
      vss => vss
   );

c_reset_register_ins : buf_x2
   port map (
      i   => aux1,
      q   => c_reset_register,
      vdd => vdd,
      vss => vss
   );

c_add_to_neuron_ins : no2_x1
   port map (
      i0  => not_aux5,
      i1  => state(2),
      nq  => c_add_to_neuron,
      vdd => vdd,
      vss => vss
   );

c_dec_input_ins : no2_x1
   port map (
      i0  => not_aux0,
      i1  => state(1),
      nq  => c_dec_input,
      vdd => vdd,
      vss => vss
   );

c_dec_neuron_ins : buf_x2
   port map (
      i   => aux1,
      q   => c_dec_neuron,
      vdd => vdd,
      vss => vss
   );


end structural;
