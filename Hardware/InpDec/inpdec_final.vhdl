-- Generated by vxx2ghdl
--
-- Generated by VASY
--
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY inpdec_final IS
PORT(
  reset	: IN STD_LOGIC;
  clk	: IN STD_LOGIC;
  c_input_dec	: IN STD_LOGIC;
  out_input_index	: OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
  out_input_reset	: OUT STD_LOGIC
);
END inpdec_final;

ARCHITECTURE RTL OF inpdec_final IS
  SIGNAL count	: STD_LOGIC_VECTOR(8 DOWNTO 0);
  SIGNAL not_count	: STD_LOGIC_VECTOR(8 DOWNTO 0);
  SIGNAL rtlalc_2	: STD_LOGIC_VECTOR(7 DOWNTO 6);
  SIGNAL rtlalc_3	: STD_LOGIC_VECTOR(5 DOWNTO 3);
  SIGNAL rtlalc_5	: STD_LOGIC_VECTOR(1 DOWNTO 0);
  SIGNAL xr2_x1_sig	: STD_LOGIC;
  SIGNAL xr2_x1_5_sig	: STD_LOGIC;
  SIGNAL xr2_x1_4_sig	: STD_LOGIC;
  SIGNAL xr2_x1_3_sig	: STD_LOGIC;
  SIGNAL xr2_x1_2_sig	: STD_LOGIC;
  SIGNAL rtlalc_4	: STD_LOGIC;
  SIGNAL rtlalc_1	: STD_LOGIC;
  SIGNAL on12_x1_sig	: STD_LOGIC;
  SIGNAL oa2ao222_x2_sig	: STD_LOGIC;
  SIGNAL oa2a22_x2_sig	: STD_LOGIC;
  SIGNAL oa2a22_x2_3_sig	: STD_LOGIC;
  SIGNAL oa2a22_x2_2_sig	: STD_LOGIC;
  SIGNAL oa22_x2_sig	: STD_LOGIC;
  SIGNAL oa22_x2_2_sig	: STD_LOGIC;
  SIGNAL o2_x2_sig	: STD_LOGIC;
  SIGNAL o2_x2_7_sig	: STD_LOGIC;
  SIGNAL o2_x2_6_sig	: STD_LOGIC;
  SIGNAL o2_x2_5_sig	: STD_LOGIC;
  SIGNAL o2_x2_4_sig	: STD_LOGIC;
  SIGNAL o2_x2_3_sig	: STD_LOGIC;
  SIGNAL o2_x2_2_sig	: STD_LOGIC;
  SIGNAL not_reset	: STD_LOGIC;
  SIGNAL not_c_input_dec	: STD_LOGIC;
  SIGNAL not_aux9	: STD_LOGIC;
  SIGNAL not_aux8	: STD_LOGIC;
  SIGNAL not_aux6	: STD_LOGIC;
  SIGNAL not_aux4	: STD_LOGIC;
  SIGNAL not_aux3	: STD_LOGIC;
  SIGNAL not_aux23	: STD_LOGIC;
  SIGNAL not_aux22	: STD_LOGIC;
  SIGNAL not_aux2	: STD_LOGIC;
  SIGNAL not_aux19	: STD_LOGIC;
  SIGNAL not_aux15	: STD_LOGIC;
  SIGNAL not_aux13	: STD_LOGIC;
  SIGNAL not_aux12	: STD_LOGIC;
  SIGNAL not_aux1	: STD_LOGIC;
  SIGNAL noa2ao222_x1_sig	: STD_LOGIC;
  SIGNAL no2_x1_sig	: STD_LOGIC;
  SIGNAL no2_x1_9_sig	: STD_LOGIC;
  SIGNAL no2_x1_8_sig	: STD_LOGIC;
  SIGNAL no2_x1_7_sig	: STD_LOGIC;
  SIGNAL no2_x1_6_sig	: STD_LOGIC;
  SIGNAL no2_x1_5_sig	: STD_LOGIC;
  SIGNAL no2_x1_4_sig	: STD_LOGIC;
  SIGNAL no2_x1_3_sig	: STD_LOGIC;
  SIGNAL no2_x1_2_sig	: STD_LOGIC;
  SIGNAL no2_x1_12_sig	: STD_LOGIC;
  SIGNAL no2_x1_11_sig	: STD_LOGIC;
  SIGNAL no2_x1_10_sig	: STD_LOGIC;
  SIGNAL nao2o22_x1_sig	: STD_LOGIC;
  SIGNAL na4_x1_sig	: STD_LOGIC;
  SIGNAL na3_x1_sig	: STD_LOGIC;
  SIGNAL na3_x1_5_sig	: STD_LOGIC;
  SIGNAL na3_x1_4_sig	: STD_LOGIC;
  SIGNAL na3_x1_3_sig	: STD_LOGIC;
  SIGNAL na3_x1_2_sig	: STD_LOGIC;
  SIGNAL na2_x1_sig	: STD_LOGIC;
  SIGNAL na2_x1_9_sig	: STD_LOGIC;
  SIGNAL na2_x1_8_sig	: STD_LOGIC;
  SIGNAL na2_x1_7_sig	: STD_LOGIC;
  SIGNAL na2_x1_6_sig	: STD_LOGIC;
  SIGNAL na2_x1_5_sig	: STD_LOGIC;
  SIGNAL na2_x1_4_sig	: STD_LOGIC;
  SIGNAL na2_x1_3_sig	: STD_LOGIC;
  SIGNAL na2_x1_2_sig	: STD_LOGIC;
  SIGNAL mbk_buf_not_aux4	: STD_LOGIC;
  SIGNAL mbk_buf_not_aux3	: STD_LOGIC;
  SIGNAL mbk_buf_not_aux2	: STD_LOGIC;
  SIGNAL mbk_buf_not_aux13	: STD_LOGIC;
  SIGNAL mbk_buf_not_aux1	: STD_LOGIC;
  SIGNAL mbk_buf_aux13	: STD_LOGIC;
  SIGNAL inv_x2_sig	: STD_LOGIC;
  SIGNAL aux6	: STD_LOGIC;
  SIGNAL aux20	: STD_LOGIC;
  SIGNAL aux16	: STD_LOGIC;
  SIGNAL aux13	: STD_LOGIC;
  SIGNAL ao2o22_x2_sig	: STD_LOGIC;
  SIGNAL ao22_x2_sig	: STD_LOGIC;
  SIGNAL ao22_x2_2_sig	: STD_LOGIC;
  SIGNAL an12_x1_sig	: STD_LOGIC;
  SIGNAL a2_x2_sig	: STD_LOGIC;
  SIGNAL a2_x2_3_sig	: STD_LOGIC;
  SIGNAL a2_x2_2_sig	: STD_LOGIC;

  COMPONENT buf_x2
  PORT(
  i	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT sff1_x4
  PORT(
  ck	: IN STD_LOGIC;
  i	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT oa2a22_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT no2_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT ao22_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT na3_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT na2_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT nao2o22_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT o2_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT inv_x2
  PORT(
  i	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT oa2ao222_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  i4	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT a2_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT oa22_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT xr2_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT noa2ao222_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  i4	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT ao2o22_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT na4_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  i3	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT on12_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT inv_x4
  PORT(
  i	: IN STD_LOGIC;
  nq	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT a3_x2
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  i2	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

  COMPONENT an12_x1
  PORT(
  i0	: IN STD_LOGIC;
  i1	: IN STD_LOGIC;
  q	: OUT STD_LOGIC
   );
  END COMPONENT;

BEGIN
  i_mbk_buf_not_aux2 : buf_x2
  PORT MAP (
    i => not_aux2,
    q => mbk_buf_not_aux2
  );
  i_mbk_buf_not_aux1 : buf_x2
  PORT MAP (
    i => not_aux1,
    q => mbk_buf_not_aux1
  );
  i_mbk_buf_not_aux3 : buf_x2
  PORT MAP (
    i => not_aux3,
    q => mbk_buf_not_aux3
  );
  i_mbk_buf_aux13 : buf_x2
  PORT MAP (
    i => aux13,
    q => mbk_buf_aux13
  );
  i_mbk_buf_not_aux13 : buf_x2
  PORT MAP (
    i => not_aux13,
    q => mbk_buf_not_aux13
  );
  i_mbk_buf_not_aux4 : buf_x2
  PORT MAP (
    i => not_aux4,
    q => mbk_buf_not_aux4
  );
  out_input_index_7_ins : buf_x2
  PORT MAP (
    i => rtlalc_2(7),
    q => out_input_index(7)
  );
  out_input_index_6_ins : buf_x2
  PORT MAP (
    i => rtlalc_2(6),
    q => out_input_index(6)
  );
  out_input_index_5_ins : buf_x2
  PORT MAP (
    i => rtlalc_3(5),
    q => out_input_index(5)
  );
  out_input_index_4_ins : buf_x2
  PORT MAP (
    i => rtlalc_3(4),
    q => out_input_index(4)
  );
  out_input_index_3_ins : buf_x2
  PORT MAP (
    i => rtlalc_3(3),
    q => out_input_index(3)
  );
  out_input_index_2_ins : buf_x2
  PORT MAP (
    i => rtlalc_4,
    q => out_input_index(2)
  );
  out_input_index_1_ins : buf_x2
  PORT MAP (
    i => rtlalc_5(1),
    q => out_input_index(1)
  );
  out_input_index_0_ins : buf_x2
  PORT MAP (
    i => rtlalc_5(0),
    q => out_input_index(0)
  );
  out_input_reset_ins : buf_x2
  PORT MAP (
    i => rtlalc_1,
    q => out_input_reset
  );
  rtlalc_5_1_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => oa2a22_x2_3_sig,
    q => rtlalc_5(1)
  );
  oa2a22_x2_3_ins : oa2a22_x2
  PORT MAP (
    i0 => no2_x1_12_sig,
    i1 => count(1),
    i2 => rtlalc_5(1),
    i3 => no2_x1_11_sig,
    q => oa2a22_x2_3_sig
  );
  no2_x1_12_ins : no2_x1
  PORT MAP (
    i0 => reset,
    i1 => not_c_input_dec,
    nq => no2_x1_12_sig
  );
  no2_x1_11_ins : no2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => reset,
    nq => no2_x1_11_sig
  );
  rtlalc_5_0_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => ao22_x2_2_sig,
    q => rtlalc_5(0)
  );
  ao22_x2_2_ins : ao22_x2
  PORT MAP (
    i0 => rtlalc_5(0),
    i1 => c_input_dec,
    i2 => no2_x1_10_sig,
    q => ao22_x2_2_sig
  );
  no2_x1_10_ins : no2_x1
  PORT MAP (
    i0 => reset,
    i1 => not_aux6,
    nq => no2_x1_10_sig
  );
  rtlalc_4_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => na3_x1_5_sig,
    q => rtlalc_4
  );
  na3_x1_5_ins : na3_x1
  PORT MAP (
    i0 => not_reset,
    i1 => na2_x1_9_sig,
    i2 => na2_x1_8_sig,
    nq => na3_x1_5_sig
  );
  na2_x1_9_ins : na2_x1
  PORT MAP (
    i0 => not_c_input_dec,
    i1 => rtlalc_4,
    nq => na2_x1_9_sig
  );
  na2_x1_8_ins : na2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => count(2),
    nq => na2_x1_8_sig
  );
  rtlalc_3_5_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => oa2a22_x2_2_sig,
    q => rtlalc_3(5)
  );
  oa2a22_x2_2_ins : oa2a22_x2
  PORT MAP (
    i0 => no2_x1_9_sig,
    i1 => count(5),
    i2 => rtlalc_3(5),
    i3 => no2_x1_8_sig,
    q => oa2a22_x2_2_sig
  );
  no2_x1_9_ins : no2_x1
  PORT MAP (
    i0 => reset,
    i1 => not_c_input_dec,
    nq => no2_x1_9_sig
  );
  no2_x1_8_ins : no2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => reset,
    nq => no2_x1_8_sig
  );
  rtlalc_3_4_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => nao2o22_x1_sig,
    q => rtlalc_3(4)
  );
  nao2o22_x1_ins : nao2o22_x1
  PORT MAP (
    i0 => o2_x2_7_sig,
    i1 => inv_x2_sig,
    i2 => not_aux9,
    i3 => not_c_input_dec,
    nq => nao2o22_x1_sig
  );
  o2_x2_7_ins : o2_x2
  PORT MAP (
    i0 => c_input_dec,
    i1 => reset,
    q => o2_x2_7_sig
  );
  inv_x2_ins : inv_x2
  PORT MAP (
    i => rtlalc_3(4),
    nq => inv_x2_sig
  );
  rtlalc_3_3_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => oa2a22_x2_sig,
    q => rtlalc_3(3)
  );
  oa2a22_x2_ins : oa2a22_x2
  PORT MAP (
    i0 => no2_x1_7_sig,
    i1 => count(3),
    i2 => rtlalc_3(3),
    i3 => no2_x1_6_sig,
    q => oa2a22_x2_sig
  );
  no2_x1_7_ins : no2_x1
  PORT MAP (
    i0 => reset,
    i1 => not_c_input_dec,
    nq => no2_x1_7_sig
  );
  no2_x1_6_ins : no2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => reset,
    nq => no2_x1_6_sig
  );
  rtlalc_2_7_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => na3_x1_4_sig,
    q => rtlalc_2(7)
  );
  na3_x1_4_ins : na3_x1
  PORT MAP (
    i0 => not_reset,
    i1 => na2_x1_7_sig,
    i2 => na2_x1_6_sig,
    nq => na3_x1_4_sig
  );
  na2_x1_7_ins : na2_x1
  PORT MAP (
    i0 => not_c_input_dec,
    i1 => rtlalc_2(7),
    nq => na2_x1_7_sig
  );
  na2_x1_6_ins : na2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => count(7),
    nq => na2_x1_6_sig
  );
  rtlalc_2_6_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => na3_x1_3_sig,
    q => rtlalc_2(6)
  );
  na3_x1_3_ins : na3_x1
  PORT MAP (
    i0 => not_reset,
    i1 => na2_x1_5_sig,
    i2 => na2_x1_4_sig,
    nq => na3_x1_3_sig
  );
  na2_x1_5_ins : na2_x1
  PORT MAP (
    i0 => not_c_input_dec,
    i1 => rtlalc_2(6),
    nq => na2_x1_5_sig
  );
  na2_x1_4_ins : na2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => count(6),
    nq => na2_x1_4_sig
  );
  rtlalc_1_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => oa2ao222_x2_sig,
    q => rtlalc_1
  );
  oa2ao222_x2_ins : oa2ao222_x2
  PORT MAP (
    i0 => rtlalc_1,
    i1 => na2_x1_3_sig,
    i2 => rtlalc_1,
    i3 => not_reset,
    i4 => a2_x2_3_sig,
    q => oa2ao222_x2_sig
  );
  na2_x1_3_ins : na2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => not_reset,
    nq => na2_x1_3_sig
  );
  a2_x2_3_ins : a2_x2
  PORT MAP (
    i0 => mbk_buf_not_aux1,
    i1 => not_aux22,
    q => a2_x2_3_sig
  );
  count_8_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => no2_x1_5_sig,
    q => count(8)
  );
  no2_x1_5_ins : no2_x1
  PORT MAP (
    i0 => o2_x2_6_sig,
    i1 => not_count(8),
    nq => no2_x1_5_sig
  );
  o2_x2_6_ins : o2_x2
  PORT MAP (
    i0 => reset,
    i1 => not_aux15,
    q => o2_x2_6_sig
  );
  count_7_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => oa22_x2_2_sig,
    q => count(7)
  );
  oa22_x2_2_ins : oa22_x2
  PORT MAP (
    i0 => count(7),
    i1 => mbk_buf_aux13,
    i2 => o2_x2_5_sig,
    q => oa22_x2_2_sig
  );
  o2_x2_5_ins : o2_x2
  PORT MAP (
    i0 => reset,
    i1 => not_aux15,
    q => o2_x2_5_sig
  );
  count_6_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => na3_x1_2_sig,
    q => count(6)
  );
  na3_x1_2_ins : na3_x1
  PORT MAP (
    i0 => o2_x2_4_sig,
    i1 => no2_x1_4_sig,
    i2 => o2_x2_3_sig,
    nq => na3_x1_2_sig
  );
  o2_x2_4_ins : o2_x2
  PORT MAP (
    i0 => not_aux12,
    i1 => not_count(6),
    q => o2_x2_4_sig
  );
  no2_x1_4_ins : no2_x1
  PORT MAP (
    i0 => reset,
    i1 => mbk_buf_not_aux13,
    nq => no2_x1_4_sig
  );
  o2_x2_3_ins : o2_x2
  PORT MAP (
    i0 => mbk_buf_not_aux3,
    i1 => not_count(6),
    q => o2_x2_3_sig
  );
  count_5_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => no2_x1_3_sig,
    q => count(5)
  );
  no2_x1_3_ins : no2_x1
  PORT MAP (
    i0 => not_aux23,
    i1 => xr2_x1_5_sig,
    nq => no2_x1_3_sig
  );
  xr2_x1_5_ins : xr2_x1
  PORT MAP (
    i0 => na3_x1_sig,
    i1 => count(5),
    q => xr2_x1_5_sig
  );
  na3_x1_ins : na3_x1
  PORT MAP (
    i0 => not_count(0),
    i1 => a2_x2_2_sig,
    i2 => not_count(4),
    nq => na3_x1_sig
  );
  a2_x2_2_ins : a2_x2
  PORT MAP (
    i0 => c_input_dec,
    i1 => not_aux8,
    q => a2_x2_2_sig
  );
  count_4_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => noa2ao222_x1_sig,
    q => count(4)
  );
  noa2ao222_x1_ins : noa2ao222_x1
  PORT MAP (
    i0 => not_count(5),
    i1 => not_aux19,
    i2 => ao2o22_x2_sig,
    i3 => aux6,
    i4 => o2_x2_sig,
    nq => noa2ao222_x1_sig
  );
  ao2o22_x2_ins : ao2o22_x2
  PORT MAP (
    i0 => count(2),
    i1 => na4_x1_sig,
    i2 => not_count(4),
    i3 => o2_x2_2_sig,
    q => ao2o22_x2_sig
  );
  na4_x1_ins : na4_x1
  PORT MAP (
    i0 => not_count(3),
    i1 => not_reset,
    i2 => not_count(4),
    i3 => not_count(1),
    nq => na4_x1_sig
  );
  o2_x2_2_ins : o2_x2
  PORT MAP (
    i0 => reset,
    i1 => not_aux8,
    q => o2_x2_2_sig
  );
  o2_x2_ins : o2_x2
  PORT MAP (
    i0 => not_aux9,
    i1 => not_aux6,
    q => o2_x2_sig
  );
  count_3_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => no2_x1_2_sig,
    q => count(3)
  );
  no2_x1_2_ins : no2_x1
  PORT MAP (
    i0 => not_aux23,
    i1 => xr2_x1_4_sig,
    nq => no2_x1_2_sig
  );
  xr2_x1_4_ins : xr2_x1
  PORT MAP (
    i0 => on12_x1_sig,
    i1 => count(3),
    q => xr2_x1_4_sig
  );
  on12_x1_ins : on12_x1
  PORT MAP (
    i0 => not_count(2),
    i1 => aux20,
    q => on12_x1_sig
  );
  count_2_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => na2_x1_2_sig,
    q => count(2)
  );
  na2_x1_2_ins : na2_x1
  PORT MAP (
    i0 => not_reset,
    i1 => xr2_x1_3_sig,
    nq => na2_x1_2_sig
  );
  xr2_x1_3_ins : xr2_x1
  PORT MAP (
    i0 => aux20,
    i1 => count(2),
    q => xr2_x1_3_sig
  );
  count_1_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => no2_x1_sig,
    q => count(1)
  );
  no2_x1_ins : no2_x1
  PORT MAP (
    i0 => oa22_x2_sig,
    i1 => xr2_x1_2_sig,
    nq => no2_x1_sig
  );
  oa22_x2_ins : oa22_x2
  PORT MAP (
    i0 => not_aux19,
    i1 => mbk_buf_not_aux2,
    i2 => reset,
    q => oa22_x2_sig
  );
  xr2_x1_2_ins : xr2_x1
  PORT MAP (
    i0 => aux6,
    i1 => count(1),
    q => xr2_x1_2_sig
  );
  count_0_ins : sff1_x4
  PORT MAP (
    ck => clk,
    i => ao22_x2_sig,
    q => count(0)
  );
  ao22_x2_ins : ao22_x2
  PORT MAP (
    i0 => na2_x1_sig,
    i1 => aux16,
    i2 => a2_x2_sig,
    q => ao22_x2_sig
  );
  na2_x1_ins : na2_x1
  PORT MAP (
    i0 => mbk_buf_not_aux4,
    i1 => not_count(4),
    nq => na2_x1_sig
  );
  a2_x2_ins : a2_x2
  PORT MAP (
    i0 => xr2_x1_sig,
    i1 => not_reset,
    q => a2_x2_sig
  );
  xr2_x1_ins : xr2_x1
  PORT MAP (
    i0 => count(0),
    i1 => c_input_dec,
    q => xr2_x1_sig
  );
  aux6_ins : na2_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => not_count(0),
    nq => aux6
  );
  aux13_ins : na2_x1
  PORT MAP (
    i1 => not_aux4,
    i0 => not_aux12,
    nq => aux13
  );
  aux16_ins : na3_x1
  PORT MAP (
    i0 => not_count(8),
    i1 => not_count(7),
    i2 => not_count(0),
    nq => aux16
  );
  aux20_ins : na3_x1
  PORT MAP (
    i0 => c_input_dec,
    i1 => not_count(0),
    i2 => not_count(1),
    nq => aux20
  );
  not_c_input_dec_ins : inv_x2
  PORT MAP (
    i => c_input_dec,
    nq => not_c_input_dec
  );
  not_reset_ins : inv_x2
  PORT MAP (
    i => reset,
    nq => not_reset
  );
  not_count_5_ins : inv_x4
  PORT MAP (
    i => count(5),
    nq => not_count(5)
  );
  not_count_3_ins : inv_x4
  PORT MAP (
    i => count(3),
    nq => not_count(3)
  );
  not_aux1_ins : a2_x2
  PORT MAP (
    i1 => not_count(3),
    i0 => not_count(5),
    q => not_aux1
  );
  not_count_2_ins : inv_x2
  PORT MAP (
    i => count(2),
    nq => not_count(2)
  );
  not_aux2_ins : a2_x2
  PORT MAP (
    i1 => not_aux1,
    i0 => not_count(2),
    q => not_aux2
  );
  not_count_1_ins : inv_x2
  PORT MAP (
    i => count(1),
    nq => not_count(1)
  );
  not_aux3_ins : a2_x2
  PORT MAP (
    i1 => not_aux2,
    i0 => not_count(1),
    q => not_aux3
  );
  not_count_6_ins : inv_x2
  PORT MAP (
    i => count(6),
    nq => not_count(6)
  );
  not_aux4_ins : a2_x2
  PORT MAP (
    i1 => not_aux3,
    i0 => not_count(6),
    q => not_aux4
  );
  not_count_4_ins : inv_x2
  PORT MAP (
    i => count(4),
    nq => not_count(4)
  );
  not_count_7_ins : inv_x2
  PORT MAP (
    i => count(7),
    nq => not_count(7)
  );
  not_count_8_ins : inv_x2
  PORT MAP (
    i => count(8),
    nq => not_count(8)
  );
  not_count_0_ins : inv_x2
  PORT MAP (
    i => count(0),
    nq => not_count(0)
  );
  not_aux19_ins : a3_x2
  PORT MAP (
    i0 => not_count(6),
    i1 => not_count(4),
    i2 => an12_x1_sig,
    q => not_aux19
  );
  an12_x1_ins : an12_x1
  PORT MAP (
    i0 => aux16,
    i1 => c_input_dec,
    q => an12_x1_sig
  );
  not_aux6_ins : inv_x2
  PORT MAP (
    i => aux6,
    nq => not_aux6
  );
  not_aux22_ins : a3_x2
  PORT MAP (
    i0 => not_aux19,
    i1 => not_count(1),
    i2 => not_count(2),
    q => not_aux22
  );
  not_aux23_ins : oa22_x2
  PORT MAP (
    i0 => not_count(5),
    i1 => not_aux22,
    i2 => reset,
    q => not_aux23
  );
  not_aux9_ins : o2_x2
  PORT MAP (
    i0 => reset,
    i1 => not_count(4),
    q => not_aux9
  );
  not_aux8_ins : a3_x2
  PORT MAP (
    i0 => not_count(3),
    i1 => not_count(1),
    i2 => not_count(2),
    q => not_aux8
  );
  not_aux12_ins : a3_x2
  PORT MAP (
    i0 => not_count(0),
    i1 => c_input_dec,
    i2 => not_count(4),
    q => not_aux12
  );
  not_aux13_ins : inv_x2
  PORT MAP (
    i => aux13,
    nq => not_aux13
  );
  not_aux15_ins : a2_x2
  PORT MAP (
    i1 => not_aux13,
    i0 => not_count(7),
    q => not_aux15
  );
END RTL;



-- Configuration for sxlib/VITAL library...
library sxlib;
use sxlib.vcomponents.all;

configuration CFG_inpdec_final of inpdec_final is
  for RTL
    for all: buf_x2 use entity sxlib.buf_x2(vital); end for;
    for all: sff1_x4 use entity sxlib.sff1_x4(vital); end for;
    for all: oa2a22_x2 use entity sxlib.oa2a22_x2(vital); end for;
    for all: no2_x1 use entity sxlib.no2_x1(vital); end for;
    for all: ao22_x2 use entity sxlib.ao22_x2(vital); end for;
    for all: na3_x1 use entity sxlib.na3_x1(vital); end for;
    for all: na2_x1 use entity sxlib.na2_x1(vital); end for;
    for all: nao2o22_x1 use entity sxlib.nao2o22_x1(vital); end for;
    for all: o2_x2 use entity sxlib.o2_x2(vital); end for;
    for all: inv_x2 use entity sxlib.inv_x2(vital); end for;
    for all: oa2ao222_x2 use entity sxlib.oa2ao222_x2(vital); end for;
    for all: a2_x2 use entity sxlib.a2_x2(vital); end for;
    for all: oa22_x2 use entity sxlib.oa22_x2(vital); end for;
    for all: xr2_x1 use entity sxlib.xr2_x1(vital); end for;
    for all: noa2ao222_x1 use entity sxlib.noa2ao222_x1(vital); end for;
    for all: ao2o22_x2 use entity sxlib.ao2o22_x2(vital); end for;
    for all: na4_x1 use entity sxlib.na4_x1(vital); end for;
    for all: on12_x1 use entity sxlib.on12_x1(vital); end for;
    for all: inv_x4 use entity sxlib.inv_x4(vital); end for;
    for all: a3_x2 use entity sxlib.a3_x2(vital); end for;
    for all: an12_x1 use entity sxlib.an12_x1(vital); end for;
  end for;
end CFG_inpdec_final;
