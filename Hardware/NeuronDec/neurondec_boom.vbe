-- VHDL data flow description generated from `neurondec_boom`
--		date : Tue Jul  5 13:07:43 2022


-- Entity Declaration

ENTITY neurondec_boom IS
  PORT (
  reset : in BIT;	-- reset
  clk : in BIT;	-- clk
  c_neuron_dec : in BIT;	-- c_neuron_dec
  out_neuron_index : out bit_vector(3 DOWNTO 0) ;	-- out_neuron_index
  out_neuron_reset : out BIT;	-- out_neuron_reset
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END neurondec_boom;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF neurondec_boom IS
  SIGNAL rtlalc_4 : REG_BIT REGISTER;	-- rtlalc_4
  SIGNAL rtlalc_3 : REG_VECTOR(2 DOWNTO 1) REGISTER;	-- rtlalc_3
  SIGNAL rtlalc_2 : REG_BIT REGISTER;	-- rtlalc_2
  SIGNAL rtlalc_1 : REG_BIT REGISTER;	-- rtlalc_1
  SIGNAL count : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- count
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6

BEGIN
  aux6 <= (NOT(reset) AND NOT(c_neuron_dec));
  aux5 <= (NOT(reset) AND NOT(aux0));
  aux4 <= NOT(aux1 OR count(1));
  aux3 <= (count(2) AND NOT(reset));
  aux2 <= (count(1) AND NOT(reset));
  aux1 <= (count(3) OR count(2));
  aux0 <= NOT(c_neuron_dec AND NOT(count(0)));
  label0 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    count (0) <= GUARDED (reset OR (c_neuron_dec XOR count(0)));
  END BLOCK label0;
  label1 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    count (1) <= GUARDED ((aux2 AND aux0) OR ((aux1 OR count(4)) AND NOT(
count(1)) AND aux5));
  END BLOCK label1;
  label2 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    count (2) <= GUARDED ((aux3 AND aux0) OR ((count(3) OR count(1) OR 
count(4)) AND NOT(count(2) XOR count(1)) AND aux5));
  END BLOCK label2;
  label3 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    count (3) <= GUARDED (((count(3) OR reset) AND aux0) OR ((NOT(count(3)
 XOR (count(2) OR count(1))) OR reset) AND NOT(
aux0)));
  END BLOCK label3;
  label4 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    count (4) <= GUARDED ((NOT(aux4) OR aux0) AND NOT(reset) AND count(4));
  END BLOCK label4;
  label5 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    rtlalc_1 <= GUARDED ((aux4 AND NOT(reset) AND NOT(count(4)) AND 
c_neuron_dec AND NOT(count(0))) OR (NOT(reset) AND NOT(
c_neuron_dec) AND rtlalc_1));
  END BLOCK label5;
  label6 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    rtlalc_2 <= GUARDED (reset OR (count(3) AND c_neuron_dec) OR (
rtlalc_2 AND NOT(c_neuron_dec)));
  END BLOCK label6;
  label7 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    rtlalc_3 (1) <= GUARDED ((aux2 AND c_neuron_dec) OR (rtlalc_3(1) AND aux6
));
  END BLOCK label7;
  label8 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    rtlalc_3 (2) <= GUARDED ((aux3 AND c_neuron_dec) OR (rtlalc_3(2) AND aux6
));
  END BLOCK label8;
  label9 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    rtlalc_4 <= GUARDED ((c_neuron_dec AND count(0)) OR (rtlalc_4 AND NOT
(c_neuron_dec)) OR reset);
  END BLOCK label9;

out_neuron_reset <= rtlalc_1;

out_neuron_index (0) <= rtlalc_4;

out_neuron_index (1) <= rtlalc_3(1);

out_neuron_index (2) <= rtlalc_3(2);

out_neuron_index (3) <= rtlalc_2;
END;
