-- VHDL data flow description generated from `neuronreg_boom`
--		date : Mon Jul  4 19:46:47 2022


-- Entity Declaration

ENTITY neuronreg_boom IS
  PORT (
  clk : in BIT;	-- clk
  reset : in BIT;	-- reset
  c_reset_reg : in BIT;	-- c_reset_reg
  c_nreg : in BIT;	-- c_nreg
  in_nreg_val : in bit_vector(12 DOWNTO 0) ;	-- in_nreg_val
  out_nreg_val : out bit_vector(20 DOWNTO 0) ;	-- out_nreg_val
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END neuronreg_boom;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF neuronreg_boom IS
  SIGNAL rtlalc_1 : REG_VECTOR(20 DOWNTO 0) REGISTER;	-- rtlalc_1
  SIGNAL reg_nreg : REG_VECTOR(20 DOWNTO 0) REGISTER;	-- reg_nreg
  SIGNAL rtlcarry_0 : BIT_VECTOR(19 DOWNTO 1);	-- rtlcarry_0
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux23 : BIT;		-- aux23
  SIGNAL aux24 : BIT;		-- aux24
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux33 : BIT;		-- aux33
  SIGNAL aux34 : BIT;		-- aux34
  SIGNAL aux42 : BIT;		-- aux42
  SIGNAL aux47 : BIT;		-- aux47
  SIGNAL aux52 : BIT;		-- aux52
  SIGNAL aux57 : BIT;		-- aux57
  SIGNAL aux62 : BIT;		-- aux62
  SIGNAL aux63 : BIT;		-- aux63
  SIGNAL aux70 : BIT;		-- aux70
  SIGNAL aux71 : BIT;		-- aux71
  SIGNAL aux78 : BIT;		-- aux78
  SIGNAL aux82 : BIT;		-- aux82
  SIGNAL aux86 : BIT;		-- aux86
  SIGNAL aux93 : BIT;		-- aux93
  SIGNAL aux97 : BIT;		-- aux97
  SIGNAL aux101 : BIT;		-- aux101
  SIGNAL aux105 : BIT;		-- aux105
  SIGNAL aux109 : BIT;		-- aux109
  SIGNAL aux110 : BIT;		-- aux110
  SIGNAL aux118 : BIT;		-- aux118
  SIGNAL aux119 : BIT;		-- aux119
  SIGNAL aux120 : BIT;		-- aux120

BEGIN
  aux120 <= (NOT(c_reset_reg) AND aux119);
  aux119 <= (NOT(reset) AND NOT(c_nreg));
  aux118 <= (((((aux110 AND NOT(c_reset_reg)) AND NOT(reset))
 AND reg_nreg(20)) OR (((NOT(aux110) AND NOT(
c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(20)))) AND 
c_nreg);
  aux110 <= NOT(rtlcarry_0(19) AND reg_nreg(19));
  aux109 <= ((((rtlcarry_0(19) XOR reg_nreg(19)) AND NOT(
c_reset_reg)) AND NOT(reset)) AND c_nreg);
  aux105 <= ((((rtlcarry_0(18) XOR reg_nreg(18)) AND NOT(
c_reset_reg)) AND NOT(reset)) AND c_nreg);
  aux101 <= ((((reg_nreg(17) XOR rtlcarry_0(17)) AND NOT(
c_reset_reg)) AND NOT(reset)) AND c_nreg);
  aux97 <= ((((rtlcarry_0(16) XOR reg_nreg(16)) AND NOT(
c_reset_reg)) AND NOT(reset)) AND c_nreg);
  aux93 <= (((((NOT(rtlcarry_0(15)) AND NOT(c_reset_reg)) 
AND reg_nreg(15)) OR ((rtlcarry_0(15) AND NOT(
c_reset_reg)) AND NOT(reg_nreg(15)))) AND NOT(reset)) AND 
c_nreg);
  aux86 <= ((((reg_nreg(14) XOR rtlcarry_0(14)) AND NOT(
c_reset_reg)) AND NOT(reset)) AND c_nreg);
  aux82 <= ((((rtlcarry_0(13) XOR reg_nreg(13)) AND NOT(
c_reset_reg)) AND NOT(reset)) AND c_nreg);
  aux78 <= (((((aux71 AND NOT(c_reset_reg)) AND reg_nreg(12)
) OR ((NOT(aux71) AND NOT(c_reset_reg)) AND NOT(
reg_nreg(12)))) AND NOT(reset)) AND c_nreg);
  aux71 <= NOT(rtlcarry_0(12) XOR in_nreg_val(12));
  aux70 <= (((((aux63 AND NOT(c_reset_reg)) AND reg_nreg(11)
) OR ((NOT(aux63) AND NOT(c_reset_reg)) AND NOT(
reg_nreg(11)))) AND NOT(reset)) AND c_nreg);
  aux63 <= NOT(in_nreg_val(11) XOR rtlcarry_0(11));
  aux62 <= ((((rtlcarry_0(10) XOR (in_nreg_val(10) XOR 
reg_nreg(10))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux57 <= ((((in_nreg_val(9) XOR (rtlcarry_0(9) XOR 
reg_nreg(9))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux52 <= ((((in_nreg_val(8) XOR (rtlcarry_0(8) XOR 
reg_nreg(8))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux47 <= ((((in_nreg_val(7) XOR (rtlcarry_0(7) XOR 
reg_nreg(7))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux42 <= (((((aux34 AND NOT(c_reset_reg)) AND NOT(reset)) 
AND reg_nreg(6)) OR (((NOT(aux34) AND NOT(
c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(6)))) AND 
c_nreg);
  aux34 <= NOT(rtlcarry_0(6) XOR in_nreg_val(6));
  aux33 <= (((((aux25 AND NOT(c_reset_reg)) AND NOT(reset)) 
AND reg_nreg(5)) OR (((NOT(aux25) AND NOT(
c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(5)))) AND 
c_nreg);
  aux25 <= NOT(in_nreg_val(5) XOR rtlcarry_0(5));
  aux24 <= (NOT(c_reset_reg) AND NOT(reset));
  aux23 <= ((((reg_nreg(4) XOR (rtlcarry_0(4) XOR 
in_nreg_val(4))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux18 <= ((((rtlcarry_0(3) XOR (in_nreg_val(3) XOR 
reg_nreg(3))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux13 <= ((((rtlcarry_0(2) XOR (in_nreg_val(2) XOR 
reg_nreg(2))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux8 <= ((((in_nreg_val(1) XOR (reg_nreg(1) XOR 
rtlcarry_0(1))) AND NOT(c_reset_reg)) AND NOT(reset)) AND 
c_nreg);
  aux3 <= ((((in_nreg_val(0) XOR reg_nreg(0)) AND NOT(
c_reset_reg)) AND NOT(reset)) AND c_nreg);
  rtlcarry_0 (1) <= (in_nreg_val(0) AND reg_nreg(0));
  rtlcarry_0 (2) <= ((in_nreg_val(1) AND (rtlcarry_0(1) OR 
reg_nreg(1))) OR (rtlcarry_0(1) AND reg_nreg(1)));
  rtlcarry_0 (3) <= ((rtlcarry_0(2) AND (reg_nreg(2) OR 
in_nreg_val(2))) OR (reg_nreg(2) AND in_nreg_val(2)));
  rtlcarry_0 (4) <= ((rtlcarry_0(3) AND (reg_nreg(3) OR 
in_nreg_val(3))) OR (reg_nreg(3) AND in_nreg_val(3)));
  rtlcarry_0 (5) <= ((reg_nreg(4) AND (in_nreg_val(4) OR 
rtlcarry_0(4))) OR (in_nreg_val(4) AND rtlcarry_0(4)));
  rtlcarry_0 (6) <= ((in_nreg_val(5) AND (reg_nreg(5) OR 
rtlcarry_0(5))) OR (reg_nreg(5) AND rtlcarry_0(5)));
  rtlcarry_0 (7) <= ((rtlcarry_0(6) AND (reg_nreg(6) OR 
in_nreg_val(6))) OR (reg_nreg(6) AND in_nreg_val(6)));
  rtlcarry_0 (8) <= ((in_nreg_val(7) AND (reg_nreg(7) OR 
rtlcarry_0(7))) OR (reg_nreg(7) AND rtlcarry_0(7)));
  rtlcarry_0 (9) <= ((in_nreg_val(8) AND (reg_nreg(8) OR 
rtlcarry_0(8))) OR (reg_nreg(8) AND rtlcarry_0(8)));
  rtlcarry_0 (10) <= ((in_nreg_val(9) AND (reg_nreg(9) OR 
rtlcarry_0(9))) OR (reg_nreg(9) AND rtlcarry_0(9)));
  rtlcarry_0 (11) <= ((rtlcarry_0(10) AND (reg_nreg(10) OR 
in_nreg_val(10))) OR (reg_nreg(10) AND in_nreg_val(10)));
  rtlcarry_0 (12) <= ((in_nreg_val(11) AND (reg_nreg(11) OR 
rtlcarry_0(11))) OR (reg_nreg(11) AND rtlcarry_0(11)));
  rtlcarry_0 (13) <= ((rtlcarry_0(12) AND (reg_nreg(12) OR 
in_nreg_val(12))) OR (reg_nreg(12) AND in_nreg_val(12)));
  rtlcarry_0 (14) <= (rtlcarry_0(13) AND reg_nreg(13));
  rtlcarry_0 (15) <= (reg_nreg(14) AND rtlcarry_0(14));
  rtlcarry_0 (16) <= (rtlcarry_0(15) AND reg_nreg(15));
  rtlcarry_0 (17) <= (rtlcarry_0(16) AND reg_nreg(16));
  rtlcarry_0 (18) <= (reg_nreg(17) AND rtlcarry_0(17));
  rtlcarry_0 (19) <= (rtlcarry_0(18) AND reg_nreg(18));
  label0 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (0) <= GUARDED (aux3 OR (reg_nreg(0) AND aux120));
  END BLOCK label0;
  label1 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (1) <= GUARDED (aux8 OR (reg_nreg(1) AND aux120));
  END BLOCK label1;
  label2 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (2) <= GUARDED (aux13 OR (reg_nreg(2) AND aux120));
  END BLOCK label2;
  label3 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (3) <= GUARDED (aux18 OR (reg_nreg(3) AND aux120));
  END BLOCK label3;
  label4 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (4) <= GUARDED (aux23 OR (reg_nreg(4) AND aux120));
  END BLOCK label4;
  label5 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (5) <= GUARDED (aux33 OR (aux24 AND reg_nreg(5) AND NOT(c_nreg))
);
  END BLOCK label5;
  label6 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (6) <= GUARDED (aux42 OR (aux24 AND reg_nreg(6) AND NOT(c_nreg))
);
  END BLOCK label6;
  label7 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (7) <= GUARDED (aux47 OR (reg_nreg(7) AND aux120));
  END BLOCK label7;
  label8 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (8) <= GUARDED (aux52 OR (reg_nreg(8) AND aux120));
  END BLOCK label8;
  label9 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (9) <= GUARDED (aux57 OR (reg_nreg(9) AND aux120));
  END BLOCK label9;
  label10 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (10) <= GUARDED (aux62 OR (reg_nreg(10) AND aux120));
  END BLOCK label10;
  label11 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (11) <= GUARDED (aux70 OR (NOT(c_reset_reg) AND reg_nreg(11) AND 
aux119));
  END BLOCK label11;
  label12 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (12) <= GUARDED (aux78 OR (NOT(c_reset_reg) AND reg_nreg(12) AND 
aux119));
  END BLOCK label12;
  label13 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (13) <= GUARDED (aux82 OR (reg_nreg(13) AND aux120));
  END BLOCK label13;
  label14 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (14) <= GUARDED (aux86 OR (reg_nreg(14) AND aux120));
  END BLOCK label14;
  label15 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (15) <= GUARDED (aux93 OR (NOT(c_reset_reg) AND reg_nreg(15) AND 
aux119));
  END BLOCK label15;
  label16 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (16) <= GUARDED (aux97 OR (reg_nreg(16) AND aux120));
  END BLOCK label16;
  label17 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (17) <= GUARDED (aux101 OR (reg_nreg(17) AND aux120));
  END BLOCK label17;
  label18 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (18) <= GUARDED (aux105 OR (reg_nreg(18) AND aux120));
  END BLOCK label18;
  label19 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (19) <= GUARDED (aux109 OR (reg_nreg(19) AND aux120));
  END BLOCK label19;
  label20 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    reg_nreg (20) <= GUARDED (aux118 OR (aux24 AND reg_nreg(20) AND NOT(c_nreg
)));
  END BLOCK label20;
  label21 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (0) <= GUARDED (aux3 OR (rtlalc_1(0) AND aux120));
  END BLOCK label21;
  label22 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (1) <= GUARDED (aux8 OR (rtlalc_1(1) AND aux120));
  END BLOCK label22;
  label23 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (2) <= GUARDED (aux13 OR (rtlalc_1(2) AND aux120));
  END BLOCK label23;
  label24 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (3) <= GUARDED (aux18 OR (aux24 AND rtlalc_1(3) AND NOT(c_nreg))
);
  END BLOCK label24;
  label25 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (4) <= GUARDED (aux23 OR (rtlalc_1(4) AND aux120));
  END BLOCK label25;
  label26 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (5) <= GUARDED (aux33 OR (rtlalc_1(5) AND aux120));
  END BLOCK label26;
  label27 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (6) <= GUARDED (aux42 OR (rtlalc_1(6) AND aux120));
  END BLOCK label27;
  label28 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (7) <= GUARDED (aux47 OR (rtlalc_1(7) AND aux120));
  END BLOCK label28;
  label29 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (8) <= GUARDED (aux52 OR (rtlalc_1(8) AND aux120));
  END BLOCK label29;
  label30 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (9) <= GUARDED (aux57 OR (rtlalc_1(9) AND aux120));
  END BLOCK label30;
  label31 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (10) <= GUARDED (aux62 OR (rtlalc_1(10) AND aux120));
  END BLOCK label31;
  label32 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (11) <= GUARDED (aux70 OR (rtlalc_1(11) AND aux120));
  END BLOCK label32;
  label33 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (12) <= GUARDED (aux78 OR (rtlalc_1(12) AND aux120));
  END BLOCK label33;
  label34 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (13) <= GUARDED (aux82 OR (aux24 AND rtlalc_1(13) AND NOT(c_nreg)
));
  END BLOCK label34;
  label35 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (14) <= GUARDED (aux86 OR (rtlalc_1(14) AND aux120));
  END BLOCK label35;
  label36 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (15) <= GUARDED (aux93 OR (rtlalc_1(15) AND aux120));
  END BLOCK label36;
  label37 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (16) <= GUARDED (aux97 OR (rtlalc_1(16) AND aux120));
  END BLOCK label37;
  label38 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (17) <= GUARDED (aux101 OR (rtlalc_1(17) AND aux120));
  END BLOCK label38;
  label39 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (18) <= GUARDED (aux105 OR (rtlalc_1(18) AND aux120));
  END BLOCK label39;
  label40 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (19) <= GUARDED (aux109 OR (rtlalc_1(19) AND aux120));
  END BLOCK label40;
  label41 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_1 (20) <= GUARDED (aux118 OR (rtlalc_1(20) AND aux120));
  END BLOCK label41;

out_nreg_val (0) <= rtlalc_1(0);

out_nreg_val (1) <= rtlalc_1(1);

out_nreg_val (2) <= rtlalc_1(2);

out_nreg_val (3) <= rtlalc_1(3);

out_nreg_val (4) <= rtlalc_1(4);

out_nreg_val (5) <= rtlalc_1(5);

out_nreg_val (6) <= rtlalc_1(6);

out_nreg_val (7) <= rtlalc_1(7);

out_nreg_val (8) <= rtlalc_1(8);

out_nreg_val (9) <= rtlalc_1(9);

out_nreg_val (10) <= rtlalc_1(10);

out_nreg_val (11) <= rtlalc_1(11);

out_nreg_val (12) <= rtlalc_1(12);

out_nreg_val (13) <= rtlalc_1(13);

out_nreg_val (14) <= rtlalc_1(14);

out_nreg_val (15) <= rtlalc_1(15);

out_nreg_val (16) <= rtlalc_1(16);

out_nreg_val (17) <= rtlalc_1(17);

out_nreg_val (18) <= rtlalc_1(18);

out_nreg_val (19) <= rtlalc_1(19);

out_nreg_val (20) <= rtlalc_1(20);
END;
