-- Generated by vxx2ghdl
--
-- Generated by VASY
--
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY neuronreg_boom IS
PORT(
  clk	: IN STD_LOGIC;
  reset	: IN STD_LOGIC;
  c_reset_reg	: IN STD_LOGIC;
  c_nreg	: IN STD_LOGIC;
  in_nreg_val	: IN STD_LOGIC_VECTOR(12 DOWNTO 0);
  out_nreg_val	: OUT STD_LOGIC_VECTOR(20 DOWNTO 0)
);
END neuronreg_boom;

ARCHITECTURE RTL OF neuronreg_boom IS
  SIGNAL rtlalc_1	: STD_LOGIC_VECTOR(20 DOWNTO 0);
  SIGNAL reg_nreg	: STD_LOGIC_VECTOR(20 DOWNTO 0);
  SIGNAL rtlcarry_0	: STD_LOGIC_VECTOR(19 DOWNTO 1);
  SIGNAL aux3	: STD_LOGIC;
  SIGNAL aux4	: STD_LOGIC;
  SIGNAL aux9	: STD_LOGIC;
  SIGNAL aux14	: STD_LOGIC;
  SIGNAL aux19	: STD_LOGIC;
  SIGNAL aux20	: STD_LOGIC;
  SIGNAL aux28	: STD_LOGIC;
  SIGNAL aux29	: STD_LOGIC;
  SIGNAL aux33	: STD_LOGIC;
  SIGNAL aux38	: STD_LOGIC;
  SIGNAL aux43	: STD_LOGIC;
  SIGNAL aux48	: STD_LOGIC;
  SIGNAL aux49	: STD_LOGIC;
  SIGNAL aux53	: STD_LOGIC;
  SIGNAL aux54	: STD_LOGIC;
  SIGNAL aux58	: STD_LOGIC;
  SIGNAL aux59	: STD_LOGIC;
  SIGNAL aux67	: STD_LOGIC;
  SIGNAL aux72	: STD_LOGIC;
  SIGNAL aux78	: STD_LOGIC;
  SIGNAL aux86	: STD_LOGIC;
  SIGNAL aux90	: STD_LOGIC;
  SIGNAL aux94	: STD_LOGIC;
  SIGNAL aux98	: STD_LOGIC;
  SIGNAL aux102	: STD_LOGIC;
  SIGNAL aux103	: STD_LOGIC;
  SIGNAL aux111	: STD_LOGIC;
  SIGNAL aux112	: STD_LOGIC;
  SIGNAL aux114	: STD_LOGIC;
  SIGNAL aux115	: STD_LOGIC;
BEGIN
  out_nreg_val(20) <= rtlalc_1(20);
  out_nreg_val(19) <= rtlalc_1(19);
  out_nreg_val(18) <= rtlalc_1(18);
  out_nreg_val(17) <= rtlalc_1(17);
  out_nreg_val(16) <= rtlalc_1(16);
  out_nreg_val(15) <= rtlalc_1(15);
  out_nreg_val(14) <= rtlalc_1(14);
  out_nreg_val(13) <= rtlalc_1(13);
  out_nreg_val(12) <= rtlalc_1(12);
  out_nreg_val(11) <= rtlalc_1(11);
  out_nreg_val(10) <= rtlalc_1(10);
  out_nreg_val(9) <= rtlalc_1(9);
  out_nreg_val(8) <= rtlalc_1(8);
  out_nreg_val(7) <= rtlalc_1(7);
  out_nreg_val(6) <= rtlalc_1(6);
  out_nreg_val(5) <= rtlalc_1(5);
  out_nreg_val(4) <= rtlalc_1(4);
  out_nreg_val(3) <= rtlalc_1(3);
  out_nreg_val(2) <= rtlalc_1(2);
  out_nreg_val(1) <= rtlalc_1(1);
  out_nreg_val(0) <= rtlalc_1(0);
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux111 = '1')
    THEN rtlalc_1(20) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux111)) = '1')
    THEN rtlalc_1(20) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux102 = '1')
    THEN rtlalc_1(19) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux102)) = '1')
    THEN rtlalc_1(19) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux98 = '1')
    THEN rtlalc_1(18) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux98)) = '1')
    THEN rtlalc_1(18) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux94 = '1')
    THEN rtlalc_1(17) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux94)) = '1')
    THEN rtlalc_1(17) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux90 = '1')
    THEN rtlalc_1(16) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux90)) = '1')
    THEN rtlalc_1(16) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux86 = '1')
    THEN rtlalc_1(15) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux86)) = '1')
    THEN rtlalc_1(15) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux78 = '1')
    THEN rtlalc_1(14) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux78)) = '1')
    THEN rtlalc_1(14) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN rtlalc_1(13) <= ((aux112 AND aux115) OR (((aux112 AND (rtlcarry_0(13) OR NOT(c_nreg))) AND aux4
) AND NOT(reg_nreg(13))));
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux72 = '1')
    THEN rtlalc_1(12) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux72)) = '1')
    THEN rtlalc_1(12) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux67 = '1')
    THEN rtlalc_1(11) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux67)) = '1')
    THEN rtlalc_1(11) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (((aux54 AND (NOT(c_reset_reg) AND (NOT(reset) AND (c_nreg AND reg_nreg(10)))))
 OR aux58) = '1')
    THEN rtlalc_1(10) <= '1';
    ELSIF ((NOT(aux114) AND (NOT((aux54 AND (NOT(c_reset_reg) AND (NOT(reset) AND (c_nreg
 AND reg_nreg(10)))))) AND NOT(aux58))) = '1')
    THEN rtlalc_1(10) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (((aux49 AND (NOT(c_reset_reg) AND (NOT(reset) AND (c_nreg AND reg_nreg(9))))) 
OR aux53) = '1')
    THEN rtlalc_1(9) <= '1';
    ELSIF ((NOT(aux114) AND (NOT((aux49 AND (NOT(c_reset_reg) AND (NOT(reset) AND (c_nreg
 AND reg_nreg(9)))))) AND NOT(aux53))) = '1')
    THEN rtlalc_1(9) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux48 = '1')
    THEN rtlalc_1(8) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux48)) = '1')
    THEN rtlalc_1(8) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux43 = '1')
    THEN rtlalc_1(7) <= '1';
    ELSIF ((NOT(aux43) AND (c_nreg OR NOT(aux4))) = '1')
    THEN rtlalc_1(7) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux38 = '1')
    THEN rtlalc_1(6) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux38)) = '1')
    THEN rtlalc_1(6) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (((aux29 AND (NOT(c_reset_reg) AND (NOT(reset) AND (c_nreg AND reg_nreg(5))))) 
OR aux33) = '1')
    THEN rtlalc_1(5) <= '1';
    ELSIF ((NOT(aux114) AND (NOT((aux29 AND (NOT(c_reset_reg) AND (NOT(reset) AND (c_nreg
 AND reg_nreg(5)))))) AND NOT(aux33))) = '1')
    THEN rtlalc_1(5) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux28 = '1')
    THEN rtlalc_1(4) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux28)) = '1')
    THEN rtlalc_1(4) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux19 = '1')
    THEN rtlalc_1(3) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux19)) = '1')
    THEN rtlalc_1(3) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux14 = '1')
    THEN rtlalc_1(2) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux14)) = '1')
    THEN rtlalc_1(2) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux9 = '1')
    THEN rtlalc_1(1) <= '1';
    ELSIF ((NOT(aux9) AND (c_nreg OR NOT(aux4))) = '1')
    THEN rtlalc_1(1) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF ((NOT((in_nreg_val(0) OR (c_reset_reg OR (reset OR (NOT(c_nreg) OR NOT(reg_nreg(0)
)))))) OR aux3) = '1')
    THEN rtlalc_1(0) <= '1';
    ELSIF ((NOT(aux114) AND ((in_nreg_val(0) OR (c_reset_reg OR (reset OR (NOT(c_nreg) OR
 NOT(reg_nreg(0)))))) AND NOT(aux3))) = '1')
    THEN rtlalc_1(0) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux111 = '1')
    THEN reg_nreg(20) <= '1';
    ELSIF ((NOT(aux111) AND (c_nreg OR NOT(aux4))) = '1')
    THEN reg_nreg(20) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux102 = '1')
    THEN reg_nreg(19) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux102)) = '1')
    THEN reg_nreg(19) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux98 = '1')
    THEN reg_nreg(18) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux98)) = '1')
    THEN reg_nreg(18) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux94 = '1')
    THEN reg_nreg(17) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux94)) = '1')
    THEN reg_nreg(17) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux90 = '1')
    THEN reg_nreg(16) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux90)) = '1')
    THEN reg_nreg(16) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux86 = '1')
    THEN reg_nreg(15) <= '1';
    ELSIF ((NOT(aux86) AND (c_nreg OR NOT(aux4))) = '1')
    THEN reg_nreg(15) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux78 = '1')
    THEN reg_nreg(14) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux78)) = '1')
    THEN reg_nreg(14) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN reg_nreg(13) <= (aux115 OR (rtlcarry_0(13) AND (NOT(c_reset_reg) AND (NOT(reset) AND (NOT(reg_nreg(13)
) AND c_nreg)))));
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux72 = '1')
    THEN reg_nreg(12) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux72)) = '1')
    THEN reg_nreg(12) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux67 = '1')
    THEN reg_nreg(11) <= '1';
    ELSIF ((NOT(aux67) AND (c_nreg OR NOT(aux4))) = '1')
    THEN reg_nreg(11) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux58 = '1')
    THEN reg_nreg(10) <= '1';
    ELSIF (((NOT(aux4) AND NOT(aux58)) OR (NOT(aux54 OR NOT(c_nreg)) AND NOT(aux58))) = '1'
)
    THEN reg_nreg(10) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux53 = '1')
    THEN reg_nreg(9) <= '1';
    ELSIF (((NOT(aux4) AND NOT(aux53)) OR (NOT(aux49 OR NOT(c_nreg)) AND NOT(aux53))) = '1'
)
    THEN reg_nreg(9) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux48 = '1')
    THEN reg_nreg(8) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux48)) = '1')
    THEN reg_nreg(8) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux43 = '1')
    THEN reg_nreg(7) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux43)) = '1')
    THEN reg_nreg(7) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux38 = '1')
    THEN reg_nreg(6) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux38)) = '1')
    THEN reg_nreg(6) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux33 = '1')
    THEN reg_nreg(5) <= '1';
    ELSIF (((NOT(aux4) AND NOT(aux33)) OR (NOT(aux29 OR NOT(c_nreg)) AND NOT(aux33))) = '1'
)
    THEN reg_nreg(5) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux28 = '1')
    THEN reg_nreg(4) <= '1';
    ELSIF ((NOT(aux28) AND (c_nreg OR NOT(aux4))) = '1')
    THEN reg_nreg(4) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux19 = '1')
    THEN reg_nreg(3) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux19)) = '1')
    THEN reg_nreg(3) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux14 = '1')
    THEN reg_nreg(2) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux14)) = '1')
    THEN reg_nreg(2) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux9 = '1')
    THEN reg_nreg(1) <= '1';
    ELSIF ((NOT(aux114) AND NOT(aux9)) = '1')
    THEN reg_nreg(1) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux3 = '1')
    THEN reg_nreg(0) <= '1';
    ELSIF (((NOT(aux4) AND NOT(aux3)) OR (in_nreg_val(0) AND (c_nreg AND NOT(aux3)))) = '1'
)
    THEN reg_nreg(0) <= '0';
    END IF;
    END IF;
  END PROCESS;
  rtlcarry_0(19) <= (rtlcarry_0(18) AND reg_nreg(18));
  rtlcarry_0(18) <= (rtlcarry_0(17) AND reg_nreg(17));
  rtlcarry_0(17) <= (rtlcarry_0(16) AND reg_nreg(16));
  rtlcarry_0(16) <= (rtlcarry_0(15) AND reg_nreg(15));
  rtlcarry_0(15) <= (rtlcarry_0(14) AND reg_nreg(14));
  rtlcarry_0(14) <= (rtlcarry_0(13) AND reg_nreg(13));
  rtlcarry_0(13) <= ((in_nreg_val(12) AND (reg_nreg(12) OR rtlcarry_0(12))) OR (reg_nreg(12) AND rtlcarry_0(12)
));
  rtlcarry_0(12) <= ((rtlcarry_0(11) AND (reg_nreg(11) OR in_nreg_val(11))) OR (reg_nreg(11) AND in_nreg_val(11)
));
  rtlcarry_0(11) <= ((in_nreg_val(10) AND (reg_nreg(10) OR rtlcarry_0(10))) OR (reg_nreg(10) AND rtlcarry_0(10)
));
  rtlcarry_0(10) <= ((rtlcarry_0(9) AND (reg_nreg(9) OR in_nreg_val(9))) OR (reg_nreg(9) AND in_nreg_val(9)
));
  rtlcarry_0(9) <= ((in_nreg_val(8) AND (rtlcarry_0(8) OR reg_nreg(8))) OR (rtlcarry_0(8) AND reg_nreg(8)
));
  rtlcarry_0(8) <= ((in_nreg_val(7) AND (reg_nreg(7) OR rtlcarry_0(7))) OR (reg_nreg(7) AND rtlcarry_0(7)
));
  rtlcarry_0(7) <= ((rtlcarry_0(6) AND (reg_nreg(6) OR in_nreg_val(6))) OR (reg_nreg(6) AND in_nreg_val(6)
));
  rtlcarry_0(6) <= ((in_nreg_val(5) AND (reg_nreg(5) OR rtlcarry_0(5))) OR (reg_nreg(5) AND rtlcarry_0(5)
));
  rtlcarry_0(5) <= ((rtlcarry_0(4) AND (reg_nreg(4) OR in_nreg_val(4))) OR (reg_nreg(4) AND in_nreg_val(4)
));
  rtlcarry_0(4) <= ((rtlcarry_0(3) AND (in_nreg_val(3) OR reg_nreg(3))) OR (in_nreg_val(3) AND reg_nreg(3)
));
  rtlcarry_0(3) <= ((in_nreg_val(2) AND (reg_nreg(2) OR rtlcarry_0(2))) OR (reg_nreg(2) AND rtlcarry_0(2)
));
  rtlcarry_0(2) <= ((in_nreg_val(1) AND (reg_nreg(1) OR rtlcarry_0(1))) OR (reg_nreg(1) AND rtlcarry_0(1)
));
  rtlcarry_0(1) <= (in_nreg_val(0) AND reg_nreg(0));
  aux3 <= ((((in_nreg_val(0) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg) AND NOT(reg_nreg(0)
));
  aux4 <= (NOT(c_reset_reg) AND NOT(reset));
  aux9 <= ((((in_nreg_val(1) XOR (rtlcarry_0(1) XOR reg_nreg(1))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux14 <= ((((in_nreg_val(2) XOR (rtlcarry_0(2) XOR reg_nreg(2))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux19 <= ((((rtlcarry_0(3) XOR (reg_nreg(3) XOR in_nreg_val(3))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux20 <= NOT((rtlcarry_0(4) XOR in_nreg_val(4)));
  aux28 <= (((((aux20 AND NOT(c_reset_reg)) AND NOT(reset)) AND reg_nreg(4)) OR (((NOT(aux20
) AND NOT(c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(4)))) AND c_nreg);
  aux29 <= NOT((in_nreg_val(5) XOR rtlcarry_0(5)));
  aux33 <= ((((NOT(aux29) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg) AND NOT(reg_nreg(5)
));
  aux38 <= ((((rtlcarry_0(6) XOR (in_nreg_val(6) XOR reg_nreg(6))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux43 <= ((((in_nreg_val(7) XOR (rtlcarry_0(7) XOR reg_nreg(7))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux48 <= ((((in_nreg_val(8) XOR (reg_nreg(8) XOR rtlcarry_0(8))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux49 <= NOT((rtlcarry_0(9) XOR in_nreg_val(9)));
  aux53 <= ((((NOT(aux49) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg) AND NOT(reg_nreg(9)
));
  aux54 <= NOT((in_nreg_val(10) XOR rtlcarry_0(10)));
  aux58 <= ((((NOT(aux54) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg) AND NOT(reg_nreg(10)
));
  aux59 <= NOT((rtlcarry_0(11) XOR in_nreg_val(11)));
  aux67 <= (((((aux59 AND NOT(c_reset_reg)) AND NOT(reset)) AND reg_nreg(11)) OR (((NOT(aux59
) AND NOT(c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(11)))) AND c_nreg);
  aux72 <= ((((in_nreg_val(12) XOR (rtlcarry_0(12) XOR reg_nreg(12))) AND NOT(c_reset_reg)
) AND NOT(reset)) AND c_nreg);
  aux78 <= ((((rtlcarry_0(14) XOR reg_nreg(14)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux86 <= (((((NOT(rtlcarry_0(15)) AND NOT(c_reset_reg)) AND NOT(reset)) AND reg_nreg(15)
) OR (((rtlcarry_0(15) AND NOT(c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(15)
))) AND c_nreg);
  aux90 <= ((((rtlcarry_0(16) XOR reg_nreg(16)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux94 <= ((((rtlcarry_0(17) XOR reg_nreg(17)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux98 <= ((((rtlcarry_0(18) XOR reg_nreg(18)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux102 <= ((((rtlcarry_0(19) XOR reg_nreg(19)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux103 <= NOT((rtlcarry_0(19) AND reg_nreg(19)));
  aux111 <= (((((aux103 AND NOT(c_reset_reg)) AND NOT(reset)) AND reg_nreg(20)) OR (((NOT(aux103
) AND NOT(c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(20)))) AND c_nreg);
  aux112 <= (c_nreg OR rtlalc_1(13));
  aux114 <= (NOT(c_reset_reg) AND (NOT(reset) AND NOT(c_nreg)));
  aux115 <= (((NOT(rtlcarry_0(13)) OR NOT(c_nreg)) AND aux4) AND reg_nreg(13));
END RTL;



-- Configuration for sxlib/VITAL library...
library sxlib;
use sxlib.vcomponents.all;

configuration CFG_neuronreg_boom of neuronreg_boom is
  for RTL
  end for;
end CFG_neuronreg_boom;
