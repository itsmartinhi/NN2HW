-- Generated by vxx2ghdl
--
-- Generated by VASY
--
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY neuronreg_boom IS
PORT(
  clk	: IN STD_LOGIC;
  reset	: IN STD_LOGIC;
  c_reset_reg	: IN STD_LOGIC;
  c_nreg	: IN STD_LOGIC;
  in_nreg_val	: IN STD_LOGIC_VECTOR(12 DOWNTO 0);
  out_nreg_val	: OUT STD_LOGIC_VECTOR(20 DOWNTO 0)
);
END neuronreg_boom;

ARCHITECTURE RTL OF neuronreg_boom IS
  SIGNAL rtlalc_1	: STD_LOGIC_VECTOR(20 DOWNTO 0);
  SIGNAL reg_nreg	: STD_LOGIC_VECTOR(20 DOWNTO 0);
  SIGNAL rtlcarry_0	: STD_LOGIC_VECTOR(19 DOWNTO 1);
  SIGNAL aux3	: STD_LOGIC;
  SIGNAL aux8	: STD_LOGIC;
  SIGNAL aux13	: STD_LOGIC;
  SIGNAL aux18	: STD_LOGIC;
  SIGNAL aux23	: STD_LOGIC;
  SIGNAL aux24	: STD_LOGIC;
  SIGNAL aux25	: STD_LOGIC;
  SIGNAL aux33	: STD_LOGIC;
  SIGNAL aux34	: STD_LOGIC;
  SIGNAL aux42	: STD_LOGIC;
  SIGNAL aux47	: STD_LOGIC;
  SIGNAL aux52	: STD_LOGIC;
  SIGNAL aux57	: STD_LOGIC;
  SIGNAL aux62	: STD_LOGIC;
  SIGNAL aux63	: STD_LOGIC;
  SIGNAL aux70	: STD_LOGIC;
  SIGNAL aux71	: STD_LOGIC;
  SIGNAL aux78	: STD_LOGIC;
  SIGNAL aux82	: STD_LOGIC;
  SIGNAL aux86	: STD_LOGIC;
  SIGNAL aux93	: STD_LOGIC;
  SIGNAL aux97	: STD_LOGIC;
  SIGNAL aux101	: STD_LOGIC;
  SIGNAL aux105	: STD_LOGIC;
  SIGNAL aux109	: STD_LOGIC;
  SIGNAL aux110	: STD_LOGIC;
  SIGNAL aux118	: STD_LOGIC;
  SIGNAL aux119	: STD_LOGIC;
  SIGNAL aux120	: STD_LOGIC;
BEGIN
  out_nreg_val(20) <= rtlalc_1(20);
  out_nreg_val(19) <= rtlalc_1(19);
  out_nreg_val(18) <= rtlalc_1(18);
  out_nreg_val(17) <= rtlalc_1(17);
  out_nreg_val(16) <= rtlalc_1(16);
  out_nreg_val(15) <= rtlalc_1(15);
  out_nreg_val(14) <= rtlalc_1(14);
  out_nreg_val(13) <= rtlalc_1(13);
  out_nreg_val(12) <= rtlalc_1(12);
  out_nreg_val(11) <= rtlalc_1(11);
  out_nreg_val(10) <= rtlalc_1(10);
  out_nreg_val(9) <= rtlalc_1(9);
  out_nreg_val(8) <= rtlalc_1(8);
  out_nreg_val(7) <= rtlalc_1(7);
  out_nreg_val(6) <= rtlalc_1(6);
  out_nreg_val(5) <= rtlalc_1(5);
  out_nreg_val(4) <= rtlalc_1(4);
  out_nreg_val(3) <= rtlalc_1(3);
  out_nreg_val(2) <= rtlalc_1(2);
  out_nreg_val(1) <= rtlalc_1(1);
  out_nreg_val(0) <= rtlalc_1(0);
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux118 = '1')
    THEN rtlalc_1(20) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux118)) = '1')
    THEN rtlalc_1(20) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux109 = '1')
    THEN rtlalc_1(19) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux109)) = '1')
    THEN rtlalc_1(19) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux105 = '1')
    THEN rtlalc_1(18) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux105)) = '1')
    THEN rtlalc_1(18) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux101 = '1')
    THEN rtlalc_1(17) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux101)) = '1')
    THEN rtlalc_1(17) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux97 = '1')
    THEN rtlalc_1(16) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux97)) = '1')
    THEN rtlalc_1(16) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux93 = '1')
    THEN rtlalc_1(15) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux93)) = '1')
    THEN rtlalc_1(15) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux86 = '1')
    THEN rtlalc_1(14) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux86)) = '1')
    THEN rtlalc_1(14) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux82 = '1')
    THEN rtlalc_1(13) <= '1';
    ELSIF ((NOT(aux82) AND (c_nreg OR NOT(aux24))) = '1')
    THEN rtlalc_1(13) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux78 = '1')
    THEN rtlalc_1(12) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux78)) = '1')
    THEN rtlalc_1(12) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux70 = '1')
    THEN rtlalc_1(11) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux70)) = '1')
    THEN rtlalc_1(11) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux62 = '1')
    THEN rtlalc_1(10) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux62)) = '1')
    THEN rtlalc_1(10) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux57 = '1')
    THEN rtlalc_1(9) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux57)) = '1')
    THEN rtlalc_1(9) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux52 = '1')
    THEN rtlalc_1(8) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux52)) = '1')
    THEN rtlalc_1(8) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux47 = '1')
    THEN rtlalc_1(7) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux47)) = '1')
    THEN rtlalc_1(7) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux42 = '1')
    THEN rtlalc_1(6) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux42)) = '1')
    THEN rtlalc_1(6) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux33 = '1')
    THEN rtlalc_1(5) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux33)) = '1')
    THEN rtlalc_1(5) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux23 = '1')
    THEN rtlalc_1(4) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux23)) = '1')
    THEN rtlalc_1(4) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux18 = '1')
    THEN rtlalc_1(3) <= '1';
    ELSIF ((NOT(aux18) AND (c_nreg OR NOT(aux24))) = '1')
    THEN rtlalc_1(3) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux13 = '1')
    THEN rtlalc_1(2) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux13)) = '1')
    THEN rtlalc_1(2) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux8 = '1')
    THEN rtlalc_1(1) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux8)) = '1')
    THEN rtlalc_1(1) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux3 = '1')
    THEN rtlalc_1(0) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux3)) = '1')
    THEN rtlalc_1(0) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux118 = '1')
    THEN reg_nreg(20) <= '1';
    ELSIF ((NOT(aux118) AND (c_nreg OR NOT(aux24))) = '1')
    THEN reg_nreg(20) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux109 = '1')
    THEN reg_nreg(19) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux109)) = '1')
    THEN reg_nreg(19) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux105 = '1')
    THEN reg_nreg(18) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux105)) = '1')
    THEN reg_nreg(18) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux101 = '1')
    THEN reg_nreg(17) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux101)) = '1')
    THEN reg_nreg(17) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux97 = '1')
    THEN reg_nreg(16) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux97)) = '1')
    THEN reg_nreg(16) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux93 = '1')
    THEN reg_nreg(15) <= '1';
    ELSIF ((NOT(aux93) AND (c_reset_reg OR NOT(aux119))) = '1')
    THEN reg_nreg(15) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux86 = '1')
    THEN reg_nreg(14) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux86)) = '1')
    THEN reg_nreg(14) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux82 = '1')
    THEN reg_nreg(13) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux82)) = '1')
    THEN reg_nreg(13) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux78 = '1')
    THEN reg_nreg(12) <= '1';
    ELSIF ((NOT(aux78) AND (c_reset_reg OR NOT(aux119))) = '1')
    THEN reg_nreg(12) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux70 = '1')
    THEN reg_nreg(11) <= '1';
    ELSIF ((NOT(aux70) AND (c_reset_reg OR NOT(aux119))) = '1')
    THEN reg_nreg(11) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux62 = '1')
    THEN reg_nreg(10) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux62)) = '1')
    THEN reg_nreg(10) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux57 = '1')
    THEN reg_nreg(9) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux57)) = '1')
    THEN reg_nreg(9) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux52 = '1')
    THEN reg_nreg(8) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux52)) = '1')
    THEN reg_nreg(8) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux47 = '1')
    THEN reg_nreg(7) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux47)) = '1')
    THEN reg_nreg(7) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux42 = '1')
    THEN reg_nreg(6) <= '1';
    ELSIF ((NOT(aux42) AND (c_nreg OR NOT(aux24))) = '1')
    THEN reg_nreg(6) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux33 = '1')
    THEN reg_nreg(5) <= '1';
    ELSIF ((NOT(aux33) AND (c_nreg OR NOT(aux24))) = '1')
    THEN reg_nreg(5) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux23 = '1')
    THEN reg_nreg(4) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux23)) = '1')
    THEN reg_nreg(4) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux18 = '1')
    THEN reg_nreg(3) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux18)) = '1')
    THEN reg_nreg(3) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux13 = '1')
    THEN reg_nreg(2) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux13)) = '1')
    THEN reg_nreg(2) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux8 = '1')
    THEN reg_nreg(1) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux8)) = '1')
    THEN reg_nreg(1) <= '0';
    END IF;
    END IF;
  END PROCESS;
  PROCESS ( clk )
  BEGIN
    IF  ((clk = '1') AND clk'EVENT)
    THEN 
    IF (aux3 = '1')
    THEN reg_nreg(0) <= '1';
    ELSIF ((NOT(aux120) AND NOT(aux3)) = '1')
    THEN reg_nreg(0) <= '0';
    END IF;
    END IF;
  END PROCESS;
  rtlcarry_0(19) <= (rtlcarry_0(18) AND reg_nreg(18));
  rtlcarry_0(18) <= (reg_nreg(17) AND rtlcarry_0(17));
  rtlcarry_0(17) <= (rtlcarry_0(16) AND reg_nreg(16));
  rtlcarry_0(16) <= (rtlcarry_0(15) AND reg_nreg(15));
  rtlcarry_0(15) <= (reg_nreg(14) AND rtlcarry_0(14));
  rtlcarry_0(14) <= (rtlcarry_0(13) AND reg_nreg(13));
  rtlcarry_0(13) <= ((rtlcarry_0(12) AND (reg_nreg(12) OR in_nreg_val(12))) OR (reg_nreg(12) AND in_nreg_val(12)
));
  rtlcarry_0(12) <= ((in_nreg_val(11) AND (reg_nreg(11) OR rtlcarry_0(11))) OR (reg_nreg(11) AND rtlcarry_0(11)
));
  rtlcarry_0(11) <= ((rtlcarry_0(10) AND (reg_nreg(10) OR in_nreg_val(10))) OR (reg_nreg(10) AND in_nreg_val(10)
));
  rtlcarry_0(10) <= ((in_nreg_val(9) AND (reg_nreg(9) OR rtlcarry_0(9))) OR (reg_nreg(9) AND rtlcarry_0(9)
));
  rtlcarry_0(9) <= ((in_nreg_val(8) AND (reg_nreg(8) OR rtlcarry_0(8))) OR (reg_nreg(8) AND rtlcarry_0(8)
));
  rtlcarry_0(8) <= ((in_nreg_val(7) AND (reg_nreg(7) OR rtlcarry_0(7))) OR (reg_nreg(7) AND rtlcarry_0(7)
));
  rtlcarry_0(7) <= ((rtlcarry_0(6) AND (reg_nreg(6) OR in_nreg_val(6))) OR (reg_nreg(6) AND in_nreg_val(6)
));
  rtlcarry_0(6) <= ((in_nreg_val(5) AND (reg_nreg(5) OR rtlcarry_0(5))) OR (reg_nreg(5) AND rtlcarry_0(5)
));
  rtlcarry_0(5) <= ((reg_nreg(4) AND (in_nreg_val(4) OR rtlcarry_0(4))) OR (in_nreg_val(4) AND rtlcarry_0(4)
));
  rtlcarry_0(4) <= ((rtlcarry_0(3) AND (reg_nreg(3) OR in_nreg_val(3))) OR (reg_nreg(3) AND in_nreg_val(3)
));
  rtlcarry_0(3) <= ((rtlcarry_0(2) AND (reg_nreg(2) OR in_nreg_val(2))) OR (reg_nreg(2) AND in_nreg_val(2)
));
  rtlcarry_0(2) <= ((in_nreg_val(1) AND (rtlcarry_0(1) OR reg_nreg(1))) OR (rtlcarry_0(1) AND reg_nreg(1)
));
  rtlcarry_0(1) <= (in_nreg_val(0) AND reg_nreg(0));
  aux3 <= ((((in_nreg_val(0) XOR reg_nreg(0)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux8 <= ((((in_nreg_val(1) XOR (reg_nreg(1) XOR rtlcarry_0(1))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux13 <= ((((rtlcarry_0(2) XOR (in_nreg_val(2) XOR reg_nreg(2))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux18 <= ((((rtlcarry_0(3) XOR (in_nreg_val(3) XOR reg_nreg(3))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux23 <= ((((reg_nreg(4) XOR (rtlcarry_0(4) XOR in_nreg_val(4))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux24 <= (NOT(c_reset_reg) AND NOT(reset));
  aux25 <= NOT((in_nreg_val(5) XOR rtlcarry_0(5)));
  aux33 <= (((((aux25 AND NOT(c_reset_reg)) AND NOT(reset)) AND reg_nreg(5)) OR (((NOT(aux25
) AND NOT(c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(5)))) AND c_nreg);
  aux34 <= NOT((rtlcarry_0(6) XOR in_nreg_val(6)));
  aux42 <= (((((aux34 AND NOT(c_reset_reg)) AND NOT(reset)) AND reg_nreg(6)) OR (((NOT(aux34
) AND NOT(c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(6)))) AND c_nreg);
  aux47 <= ((((in_nreg_val(7) XOR (rtlcarry_0(7) XOR reg_nreg(7))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux52 <= ((((in_nreg_val(8) XOR (rtlcarry_0(8) XOR reg_nreg(8))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux57 <= ((((in_nreg_val(9) XOR (rtlcarry_0(9) XOR reg_nreg(9))) AND NOT(c_reset_reg)) 
AND NOT(reset)) AND c_nreg);
  aux62 <= ((((rtlcarry_0(10) XOR (in_nreg_val(10) XOR reg_nreg(10))) AND NOT(c_reset_reg)
) AND NOT(reset)) AND c_nreg);
  aux63 <= NOT((in_nreg_val(11) XOR rtlcarry_0(11)));
  aux70 <= (((((aux63 AND NOT(c_reset_reg)) AND reg_nreg(11)) OR ((NOT(aux63) AND NOT(c_reset_reg
)) AND NOT(reg_nreg(11)))) AND NOT(reset)) AND c_nreg);
  aux71 <= NOT((rtlcarry_0(12) XOR in_nreg_val(12)));
  aux78 <= (((((aux71 AND NOT(c_reset_reg)) AND reg_nreg(12)) OR ((NOT(aux71) AND NOT(c_reset_reg
)) AND NOT(reg_nreg(12)))) AND NOT(reset)) AND c_nreg);
  aux82 <= ((((rtlcarry_0(13) XOR reg_nreg(13)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux86 <= ((((reg_nreg(14) XOR rtlcarry_0(14)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux93 <= (((((NOT(rtlcarry_0(15)) AND NOT(c_reset_reg)) AND reg_nreg(15)) OR ((rtlcarry_0(15)
 AND NOT(c_reset_reg)) AND NOT(reg_nreg(15)))) AND NOT(reset)) AND c_nreg);
  aux97 <= ((((rtlcarry_0(16) XOR reg_nreg(16)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux101 <= ((((reg_nreg(17) XOR rtlcarry_0(17)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux105 <= ((((rtlcarry_0(18) XOR reg_nreg(18)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux109 <= ((((rtlcarry_0(19) XOR reg_nreg(19)) AND NOT(c_reset_reg)) AND NOT(reset)) AND c_nreg
);
  aux110 <= NOT((rtlcarry_0(19) AND reg_nreg(19)));
  aux118 <= (((((aux110 AND NOT(c_reset_reg)) AND NOT(reset)) AND reg_nreg(20)) OR (((NOT(aux110
) AND NOT(c_reset_reg)) AND NOT(reset)) AND NOT(reg_nreg(20)))) AND c_nreg);
  aux119 <= (NOT(reset) AND NOT(c_nreg));
  aux120 <= (NOT(c_reset_reg) AND aux119);
END RTL;



-- Configuration for sxlib/VITAL library...
library sxlib;
use sxlib.vcomponents.all;

configuration CFG_neuronreg_boom of neuronreg_boom is
  for RTL
  end for;
end CFG_neuronreg_boom;
